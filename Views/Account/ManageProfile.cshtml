@using Microsoft.AspNetCore.Mvc.ModelBinding
@model ManageProfileModel
@{
	Layout = "_LayoutUser";

	Func<string, string> isHide = property =>
	{
		if (ViewContext.ModelState.GetValidationState(property) != ModelValidationState.Invalid)
		{
			// Nếu hợp lệ thì ẩn
			return "hide";
		}
		return "";
	};
}
<div class="Manage-Profile">
	

	<div class="Manage-Profile_Information">
		@if (TempData["Message"] != null)
		{
			<div class="alert alert-success text-center display-6 text-success">@TempData["Message"]</div>
		}
		<div asp-validation-summary="ModelOnly" class="text-center"></div>

		<form id="form-profile" asp-action="ManageProfile" method="post">
			<table>
				@*User name*@
				<tr>
					<td>
						User name
					</td>
				</tr>
				<tr class="Show-Error @isHide("Name")">
					<td><span asp-validation-for="Name" class="text-danger"></span></td>
				</tr>
				<tr class="Manage-Profile_Show">
					<td>
						@*Thêm id "MyInput " để viết sự kiện bỏ thuộc tính readonly*@
						<input type="text" id="MyInput1" asp-for="Name" readonly />
						<i class="fa-solid fa-pen" data-input-id="MyInput1"></i>
					</td>
				</tr>
				
				@*Account*@
				<tr>
					<td>
						Account
					</td>
				</tr>
				<tr class="Manage-Profile_Show">
					<td>
						<input asp-for="Account" readonly />
					</td>
				</tr>
			
				@*Password*@
				<tr>
					<td>
						Password
					</td>
				</tr>
				<tr class="Manage-Profile_Show">
					<td>
						<input type="text" value="******" readonly />
						<i class="fa-solid fa-pen iconChangePassword"></i>
					</td>
				</tr>

				@*New password*@
				<tr class="hide" id="ChangePassword">
					<td>
						New Password
					</td>
				</tr>
				<tr class="@isHide("NewPassword")">
					<td><span asp-validation-for="NewPassword" class="text-danger"></span></td>
				</tr>
				<tr class="Manage-Profile_Show_NewPassword hide">
					<td>
						<input id="New_Password" asp-for="NewPassword" />
					</td>
				</tr>
				
				@*Confirm password*@
				<tr class="hide" id="ChangePassword2">
					<td>
						Confirm Password
					</td>
				</tr>
				<tr class="@isHide("ConfirmPassword")">
					<td><span asp-validation-for="ConfirmPassword" class="text-danger"></span></td>
				</tr>
				<tr class="Manage-Profile_Show_NewPassword hide">
					<td>
						<input id="Confirm_Password" asp-for="ConfirmPassword" />
					</td>
				</tr>
				
				@*Phone number*@
				<tr>
					<td>
						Phone number
					</td>
				</tr>
				<tr class="@isHide("PhoneNumber")">
					<td><span asp-validation-for="PhoneNumber" class="text-danger"></span></td>
				</tr>
				<tr class="Manage-Profile_Show">
					<td>
						<input id="MyInput3" asp-for="PhoneNumber" readonly />
						<i class="fa-solid fa-pen" data-input-id="MyInput3"></i>
					</td>
				</tr>
				
				
				@*Age*@
				<tr>
					<td>
						Age
					</td>
				</tr>
				<tr class="Manage-Profile_Show">
					<td>
						<input asp-for="Age" readonly />
					</td>
				</tr>

				@*Birthday*@
				<tr>
					<td>
						Birthday
					</td>
				</tr>
				<tr class="@isHide("Birthday")">
					<td><span asp-validation-for="Birthday" class="text-danger"></span></td>
				</tr>
				<tr class="Manage-Profile_Show">
					<td>
						<input id="MyInput4" asp-for="Birthday" readonly />
						<i class="fa-solid fa-pen" data-input-id="MyInput4"></i>
					</td>
				</tr>
				
				@*Gender*@
				<tr>
					<td>
						Gender
					</td>
				</tr>
				<tr class="@isHide("Gender")">
					<td><span asp-validation-for="Gender" class="text-danger"></span></td>
				</tr>
				<tr class="Manage-Profile_Show">
					<td>
						<select class="OptionGender" id="myComboBox" asp-for="Gender">
							<option value="Male">Male</option>
							<option value="Female">Female</option>
							<option value="Optional">Optional</option>
						</select>
					</td>
				</tr>
				
			</table>
		</form>
		<div class="Manage-Profile_btnSave">
			<button form="form-profile" type="submit">Save now</button>
		</div>
	</div>
</div>

@section Scripts {
	<script type="text/javascript">
		$(document).ready(function () {
			// Khi submit form, jquery validation thuc hien validate
			// Cần kiểm tra input nào có lỗi để hiển thị
			$('#form-profile').on('submit', function () {
				$('input[data-val="true"]').each(function () {
					validateInput($(this));
				});
			});

			// Lắng nghe sự kiện khi người dùng thay đổi giá trị trong trường input
			$('input[data-val="true"]').on('input', function () {
				validateInput($(this));
			});

			// Hàm thực hiện kích hoạt validate của các input
			// Nếu có lỗi, hiển thị dòng <tr> thông báo đang bị ẩn
			// Nếu không lỗi, ẩn dòng <tr> thông báo
			function validateInput(input) {
				var validationMessage = $('span[data-valmsg-for="' + input.attr('name') + '"]');
				var parentRow = validationMessage.closest('tr');

				// Trigger validation on the input field at client-side
				input.valid();

				// Kiểm tra xem trường input có lỗi không
				if (input.hasClass('input-validation-error')) {
					console.log('Invalid ' + input.attr('name'));
					parentRow.removeClass('hide'); // Hiển thị dòng thông báo lỗi
				} else {
					console.log('Valid ' + input.attr('name'));
					parentRow.addClass('hide'); // Ẩn dòng thông báo lỗi
				}
			}
		});
	</script>
}


<script>
	var InputChange = document.querySelectorAll(".fa-pen");
	var changePassword = document.getElementById("ChangePassword");
	var newPasswordRow = document.querySelector(".Manage-Profile_Show_NewPassword");
	var newPassword = document.getElementById("New_Password");
	var changePassword2 = document.getElementById("ChangePassword2");
	var confirmPasswordRow = document.querySelectorAll(".Manage-Profile_Show_NewPassword")[1];
	var confirmPassword = document.getElementById("Confirm_Password");
	var icon = document.querySelector(".iconChangePassword");

	function EnableInput(inputId) {
		document.getElementById(inputId).readOnly = false;
	}

	// Define the ToggleInput function to toggle the visibility of password input fields


	// Loop through the InputChange array and assign an event handler function to each element in the array
	InputChange.forEach(function (input) {
		input.addEventListener("click", function () {
			// Get the value of the data-input-id attribute of the icon
			var inputId = input.getAttribute("data-input-id");
			// Call the EnableInput function with inputId as the argument if the inputId is one of the specified values
			EnableInput(inputId);
			// Otherwise, call the ToggleInput function to toggle the visibility of the password input fields
		});
	});

	function toggleNewPassword() {
		changePassword.classList.toggle("hide");
		newPasswordRow.classList.toggle("hide");
		changePassword2.classList.toggle("hide");
		confirmPasswordRow.classList.toggle("hide");
	}

	if (icon) {
		icon.addEventListener("click", toggleNewPassword);
	}
</script>