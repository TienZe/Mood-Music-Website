@model CreateSongModel
@{
    Layout = "_LayoutAdmin";
}

<div class="Admin-AddNewModel">
    <a asp-controller="Song" asp-action="Index">
        <i class="fa-solid fa-arrow-left-long"></i>
        Back
    </a>

    <h1>New song</h1>

    <form id="create-song-form" asp-controller="Song" asp-action="Create" method="post"
          enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="login-validation-summary-errors"></div>

        <div class="Admin-AddNewModel_text_field">
            <label asp-for=Audio>Directory path</label>
            <span asp-validation-for="Audio" class="text-danger"></span>
            <input type="text" id="Directory-path" readonly />
            <input asp-for="Audio" class="invisible_input" />
            <i class="fa-regular fa-folder-closed" id="folder"></i>
        </div>

        <div class="Admin-AddNewModel_text_field">
            <label asp-for="Name">Name</label>
            <span asp-validation-for="Name" class="text-danger"></span>
            <input asp-for="Name" />
        </div>

        <div class="Admin-AddNewModel_text_field" style="margin-bottom: 50px">
            <label asp-for="Artist">Artist</label>
            <span asp-validation-for="Artist" class="text-danger"></span>
            <input asp-for="Artist" />
        </div>

        <div>
            <span asp-validation-for="GenreIds" class="text-danger"></span>
        </div>
        <div class="Admin-AddNewModel-Category">

            <label>Genre</label>

            @*Hiển thị các Genre đã chọn lên ô chứa Genre*@
            <div class="Category-Show">
                @foreach (var item in 
                    (ViewData["Genres"] as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>())
                {
                    int genreId = Convert.ToInt32(item.Value);
                    bool isVisible = Model?.GenreIds?.Contains(genreId) ?? false;
                    <div class="Category-Show-item @(isVisible? "" : "hide")" id="checkbox-genre-@genreId">
                        <i class="fa-solid fa-xmark" icon-Category-id="checkbox-genre-@genreId"></i>
                        @item.Text
                    </div>
                }
            </div>

            @*Hiển thị các checkbox Genre để chọn*@
            <div class="Category-List">
                <i class="fa-solid fa-caret-down" id="List-Genre"></i>
                <div class="hide" id="Genre-Item">
                    @foreach (var item in
                        (ViewData["Genres"] as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>())
                    {
                        int genreId = Convert.ToInt32(item.Value);
                        bool? isChecked = Model?.GenreIds?.Contains(genreId);
                        <div class="Category-item" checkbox-Category-id="checkbox-genre-@genreId">
                            <input type="checkbox" checkbox-Category-id="checkbox-genre-@genreId"
                                   name="GenreIds" value="@genreId" checked="@isChecked" />
                            @item.Text
                        </div>
                    }
                </div>
            </div>

        </div>

        <div>
            <span asp-validation-for="EmotionIds" class="text-danger"></span>
        </div>
        <div class="Admin-AddNewModel-Category">
            <label>Emotion</label>

            @*Hiển thị các Emotion đã chọn lên ô chứa Emotion*@
            <div class="Category-Show">
                @foreach (var item in
                    (ViewData["Emotions"] as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>())
                {
                    int emotionId = Convert.ToInt32(item.Value);
                    bool isVisible = Model?.EmotionIds?.Contains(emotionId) ?? false;
                    <div class="Category-Show-item @(isVisible? "" : "hide")" id="checkbox-emotion-@emotionId">
                        <i class="fa-solid fa-xmark" icon-Category-id="checkbox-emotion-@emotionId"></i>
                        @item.Text
                    </div>

                }
                <div class="Category-Show-item hide" id="checkbox-Active">
                    <i class="fa-solid fa-xmark" icon-Category-id="checkbox-Active"></i>
                    Active
                </div>
            </div>

            @*Hiển thị các checkbox Emotion để chọn*@
            <div class="Category-List">
                <i class="fa-solid fa-caret-down" id="List-Emotion"></i>
                <div class="hide" id="Emotion-Item">
                    @foreach (var item in
                        (ViewData["Emotions"] as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>())
                    {
                        int emotionId = Convert.ToInt32(item.Value);
                        bool isChecked = Model?.EmotionIds?.Contains(emotionId) ?? false;
                        <div class="Category-item">
                            <input type="checkbox" checkbox-Category-id="checkbox-emotion-@emotionId"
                                   name="EmotionIds" value="@emotionId" checked="@isChecked" />
                            @item.Text
                        </div>

                    }
                </div>
            </div>


        </div>
    </form>

    <div class="btn-AddNewModel">
        <button form="create-song-form">Save</button>
    </div>
</div>

<script>
    // Add new song - list genre and emotion

    var ListGenre = document.querySelector("#List-Genre");
    var ListEmotion = document.querySelector("#List-Emotion");
    var GenreItem = document.querySelector("#Genre-Item");
    var EmotionItem = document.querySelector("#Emotion-Item");


    ListGenre.addEventListener("click", function () {
        GenreItem.classList.toggle("hide");
        EmotionItem.classList.add("hide");
    })

    ListEmotion.addEventListener("click", function () {
        EmotionItem.classList.toggle("hide");
        GenreItem.classList.add("hide");
    })

    // Add new song - click icon folfer

    var fileInput = document.querySelector("input[type='file']");
    var fileSelect = document.querySelector('#folder');
    var filePath = document.querySelector("#Directory-path");

    fileSelect.addEventListener("click", (event) => {
        event.preventDefault(); // ngăn chặn sự kiện mặc định của phần tử i
        fileInput.click(); // tự động gọi sự kiện của phần tử input file
    });

    fileInput.addEventListener('change', (event) => {
        const selectedFile = event.target.files[0];
        filePath.value = selectedFile.name; // hiển thị đường dẫn của tệp tin đã chọn lên phần tử input text
    });

    // Add new song - check box

    var checkboxes = document.querySelectorAll("input[type='checkbox']");
    var CategoryItem = document.querySelectorAll(".Category-item");

    function addCategory(checkboxCategory) {
        var newCategory = document.querySelector("#" + checkboxCategory);
        newCategory.classList.toggle("hide");
    }

    checkboxes.forEach(function (checkbox) {
        checkbox.addEventListener("change", function () {
            var checkboxCategory = this.getAttribute("checkbox-Category-id");
            addCategory(checkboxCategory);
        });
    });

    // Add new song - click icon x

    var iconX = document.querySelectorAll(".Category-Show-item i");

    function RemoveCategory(iconCategory) {
        var removeCategory = document.querySelector("#" + iconCategory);
        removeCategory.classList.add("hide");

        // bỏ tick của checkbox tương ứng
        var checkbox = document.querySelector("input[checkbox-Category-id='" + iconCategory + "']");
        checkbox.checked = false;
    }

    iconX.forEach(function (icon) {
        icon.addEventListener("click", function () {
            var iconCategory = icon.getAttribute("icon-Category-id");
            RemoveCategory(iconCategory);
        })
    })
</script>
